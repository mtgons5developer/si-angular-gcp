/* Define keyframes for slide-in animation */
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-50px); /* Move modal upwards */
  }
  to {
    opacity: 1;
    transform: translateY(0); /* Reset modal position */
  }
}

/* Define keyframes for slide-out animation */
@keyframes slideOut {
  from {
    opacity: 1;
    transform: translateY(0); /* Reset modal position */
  }
  to {
    opacity: 0;
    transform: translateY(-50px); /* Move modal upwards */
  }
}

/* Common styles */
.modal {
  display: flex;
  justify-content: center; /* Center horizontally */
  align-items: center; /* Center vertically */
  position: fixed;
  z-index: 2;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.5);
  animation-duration: 0.3s;
  animation-fill-mode: both;
}

/* Apply slide-in animation when showModal is true */
.slide-in {
  animation-name: slideIn;
}

/* Apply slide-out animation when showModal is false */
.slide-out {
  animation-name: slideOut;
}

/* Hide modal when showModal is false */
.hidden {
  display: none;
}

/* Apply a class to both your email and password input fields in the HTML */
.input-field,
.button-field {
  box-sizing: border-box;
  width: 100%;
  padding: 10px;
  margin-bottom: 15px;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 16px;
  min-height: 40px; /* Keep the input height consistent */
}

.button-field {
  background-color: #ff6b35; /* Example background color */
  color: white; /* Button text color */
  cursor: pointer;
  border: none; /* Remove border for buttons */
}

/* You may already have specific classes or you could apply these styles to input types */
input[type="email"],
input[type="password"] {
  width: 100%; /* This will make them take up the full width of their parent container */
  padding: 10px; /* Adjust padding as needed */
  margin-bottom: 15px; /* Adjust margin as needed for spacing */
  border: 1px solid #ccc; /* Example border, style as needed */
  border-radius: 4px; /* Rounded corners */
}

.modal-content {
  position: relative; /* This makes sure that absolute positioning is relative to this container */

  font-size: 12px; /* Set the base font size for all text within the modal */

  background-color: white;
  border-radius: 10px;
  padding: 2em;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  /* Remove the transform and top properties */
  width: 90%;
  max-width: 300px; /* You can adjust the width as needed */
  min-height: 300px; /* Minimum height to accommodate the largest tab */
  max-height: 350px; /* Minimum height to accommodate the largest tab */

  display: flex;
  flex-direction: column;
  align-items: center;
  /* padding: 20px; */
}

/* Add hover effect for buttons */
.button-field:hover {
  background-color: #e65c00; /* Darker shade for button hover state */
}

/* This is for if the buttons are actually input[type="submit"] or button elements */
.input-field-button {
  width: 100%; /* Match the width of text inputs */
  /* Other styles to match the inputs, if desired */
}

.close-button {
  position: absolute;
  top: 0.5rem; /* Adjust the value to align the button as needed */
  right: 0.5rem; /* Adjust the value to align the button as needed */
  background: none;
  border: none;
  font-size: 1.5rem; /* Adjust the size as needed */
  cursor: pointer;
  z-index: 10; /* Ensure it's above other elements */
}

/* Optional: Add styles for hover state for better user interaction feedback */
.close-button:hover {
  color: #c00; /* Change color on hover */
}

h2 {
  color: #333;
  font-size: 1.5em;
  margin-bottom: 1em;
}

input[type="text"],
input[type="password"] {
  width: 100%;
  padding: 0.5em;
  margin-bottom: 1em;
  border: 1px solid #ccc;
  border-radius: 5px;
}

.login-btn {
  width: 100%;
  padding: 0.75em;
  background-color: #ff6b35; /* Use your button color */
  border: none;
  border-radius: 5px;
  color: white;
  font-size: 1em;
  cursor: pointer;
  margin-bottom: 1em;
}

.login-btn:hover {
  background-color: #e65c00; /* Darken button on hover */
}

.forgot-password,
.sign-up,
.google-btn {
  display: block;
  text-align: center;
  margin-top: 1em;
  cursor: pointer;
}

.google-btn {
  background-color: #db4437;
  color: white;
  padding: 10px 20px;
  margin: 20px 0;
  border: none;
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  border-radius: 5px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.forgot-password:hover,
.sign-up:hover {
  text-decoration: underline;
}

.tabs button {
  background: none;
  border: none;
  padding: 10px;
  cursor: pointer;
}

.tabs button.active {
  border-bottom: 2px solid orange; /* Highlight the active tab */
}

.tab-content {
  padding: 20px;
  /* Additional styling */
}

.additional-contents p,
.sign-up,
.google-btn {
  text-align: center;
}

/* Flexbox centering for button container */
.google-button-container {
  display: flex;
  justify-content: center; /* Centers button horizontally in the flex container */
  margin-top: 1em; /* Adds space above the Google button, adjust as needed */
}

/* If .google-btn is not a container, but the button itself, you may not need this */
.google-btn {
  cursor: pointer; /* Makes it clear the button is clickable */
  /* Add any other button styles here */
}

.google-btn svg {
  width: 22px;
  height: auto;
}

.additional-contents {
  text-align: center;
  /* Add any additional styling here */
}

.account-prompt {
  margin-bottom: 1rem; /* Adjust spacing as needed */
}

.google-button-container {
  margin-top: 1rem; /* Adjust spacing as needed */
  /* No changes needed here if it's already centered */
}

/* Ensure links inside .additional-contents are inline, not block */
.additional-contents a {
  display: inline; /* Override any global link styles that may set display: block */
  color: blue; /* Style as needed */
  text-decoration: underline;
}

/* Adjustments for responsive behavior if necessary */
@media (max-width: 767px) {
  .additional-contents .account-prompt,
  .additional-contents .google-button-container {
    display: block; /* Stack elements on smaller screens */
  }
}

/* Styles for the Send code via SMS button */
.send-sms-btn {
  background-color: #ff6b35; /* Orange background */
  color: white; /* White text */
  /* ... other styles ... */
}

/* Styles for the Send code via WhatsApp button */
.send-whatsapp-btn {
  background-color: white; /* White background */
  color: #ff6b35; /* Orange text */
  border: 2px solid #ff6b35; /* Orange border to match the text */
  /* ... other styles ... */
}

/* You may want to add :hover styles for better user experience */
.send-whatsapp-btn:hover {
  background-color: #ffede0; /* Light orange background for hover */
  /* ... other styles ... */
}

.input-field {
  background-color: white; /* Ensure input background is white */
  color: #333; /* Default text color, change as needed */
  /* ... other styles ... */
}
